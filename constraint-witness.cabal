Name:           constraint-witness
Version:        0.1.0
Stability:      experimental
Cabal-Version:  >= 1.2
License:        MIT
License-File:   LICENSE
Author:         Nicolas Stamm
Homepage:       https://github.com/Solonarv/constraint-witness
Bug-Reports:    https://github.com/Solonarv/constraint-witness/issues

Tested-With:    GHC == 7.10.2  

Build-Type:     Simple

Synopsis:       Reify constraints to witness values.
# Description
#   Allows you to transform constraints into values. More specifically,
#   you can transform back and forth between the following two types:
#   
#       Cxt => a
#   
#   and:
#   
#       Witness Cxt -> a
#   
#   Witness is a magical type family (implemented by a GHC typechecker plugin)
#   that transforms constraints into values using the following schema:
#   
#    - Typeclass constraints are witnessed by a dictionary of the typeclass' methods
#    - Equality constraints are witnessed by `(:~:)` from `Data.Type.Equality`.
#    - Implicit parameter constraints (with `-XImplicitParams`) are witnessed by a value of the
#      parameter's type
#    - Constraint conjunction turns into a heterogenous list of the coonstraints' witnesses  

Source-Repository head
  type:     git
  location: git://github.com/Solonarv/constraint-witness.git

Library
  Build-Depends:        base, ghc >= 7.10, ghc-prim, ghc-tcplugins-extra, HList == 0.4.*
  Exposed-Modules:
    ConstraintWitness.Plugin,
    ConstraintWitness.Internal,
    ConstraintWitness.Plugin.Witness,
    ConstraintWitness.TcPlugin.Instances
  Hs-Source-Dirs:       plugin